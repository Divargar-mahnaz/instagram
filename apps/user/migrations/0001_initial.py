# Generated by Django 3.1.7 on 2021-03-11 08:51

import apps.user.managers
import common.validators
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('user_name', models.CharField(max_length=100, unique=True, validators=[common.validators.check_user_name], verbose_name='Username')),
                ('image', models.ImageField(blank=True, default='user/default_profile.png', null=True, upload_to='user', verbose_name='Image')),
                ('full_name', models.CharField(blank=True, max_length=100, verbose_name='Full Name')),
                ('gender', models.CharField(blank=True, choices=[('F', 'female'), ('M', 'male')], max_length=1, null=True, verbose_name='Gender')),
                ('bio', models.TextField(blank=True, verbose_name='Bio')),
                ('website', models.CharField(blank=True, max_length=150, validators=[common.validators.check_website], verbose_name='Website')),
                ('phone_number', models.CharField(blank=True, max_length=11, null=True, unique=True, validators=[common.validators.check_phone_number], verbose_name='Phone number')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='Email')),
                ('slug', django_extensions.db.fields.AutoSlugField(allow_unicode=True, blank=True, editable=False, populate_from=['user_name'], unique=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='superuser')),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', apps.user.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Follow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accept', models.BooleanField(default=False)),
                ('from_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='from_person', to=settings.AUTH_USER_MODEL)),
                ('to_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to_person', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='request_to',
            field=models.ManyToManyField(related_name='request_from', through='user.Follow', to=settings.AUTH_USER_MODEL, verbose_name='follow'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
